{"version":3,"sources":["serviceWorker.js","components/Toolbar.js","components/IbcmHeader.js","scripts/ibcmOpcodes.js","components/IbcmOpcode.js","components/IbcmComments.js","components/IbcmBody.js","components/IbcmDescription.js","components/IbcmRow.js","scripts/exportCode.js","components/Editor.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Toolbar","id","onClick","this","props","resetter","bind","title","className","exportter","React","Component","IbcmHeader","ibcmOpcodes","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","IbcmOpcode","state","open","setState","key","toggle","updateOpcode","options","push","opcode","onMouseLeave","IbcmComments","event","updateComments","target","value","type","comments","onChange","handleChange","IbcmBody","updateBody","padStart","maxLength","body","onBlur","fillin","IbcmDescription","updateDescription","description","disabled","userEdit","updateUserEdit","getDescription","row","desc","binary","parseInt","toString","io","charAt","chartype","shift","dir","count","substring","length","command","e","console","log","IbcmRow","code","ibcm","editor","addr","exportCode","outputStr","i","trimRight","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","blankIbcm","Editor","initialIbcm","rows","map","index","updateIbcm","resetIbcm","exportIbcm","App","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e7d9c02.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nclass Toolbar extends React.Component {\n  //for the buttons, make the \"hover\" say \"Add Line\",\"New File\",\"Export File\" or smth\n  render() {\n    return (\n      <div id='toolbar'>\n        <h1>IBCM Editor</h1>\n        <div>\n          <button onClick={this.props.resetter.bind(this)} title='Reset'>\n            <i className='fas fa-undo-alt'></i>\n          </button>\n          <button onClick={this.props.exportter.bind(this)} title='Download'>\n            <i className='fas fa-file-download'></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React from 'react';\n\nclass IbcmHeader extends React.Component {\n  render() {\n    return (\n      <div className='ibcm-header'>\n        <label>Memory</label>\n        <label>Value</label>\n        <label>Description</label>\n        <label>Comments</label>\n      </div>\n    );\n  }\n}\n\nexport default IbcmHeader;\n","const ibcmOpcodes = {\n  0: 'halt',\n  1: 'i/o',\n  2: 'shift',\n  3: 'load',\n  4: 'store',\n  5: 'add',\n  6: 'subtract',\n  7: 'and',\n  8: 'or',\n  9: 'xor',\n  A: 'not',\n  B: 'nop',\n  C: 'jmp',\n  D: 'jmpe',\n  E: 'jmpl',\n  F: 'brl'\n};\n\nexport default ibcmOpcodes;\n","import React from 'react';\nimport ibcmOpcodes from '../scripts/ibcmOpcodes';\n\nclass IbcmOpcode extends React.Component {\n  constructor() {\n    super();\n    this.state = { open: false };\n  }\n  toggle() {\n    this.setState({ open: !this.state.open });\n  }\n  updateOpcode(key) {\n    this.toggle();\n    this.props.updateOpcode(key);\n  }\n  render() {\n    let options = [];\n    for (let key in ibcmOpcodes) {\n      options.push(\n        <li\n          key={key}\n          onClick={() => this.updateOpcode(key)}\n        >{`${key} - ${ibcmOpcodes[key]}`}</li>\n      );\n    }\n\n    return (\n      <div className='ibcm-opcode'>\n        <div className='ibcm-opcode-selected' onClick={() => this.toggle()}>\n          {this.props.opcode}\n        </div>\n        {this.state.open && (\n          <ul\n            className='ibcm-opcode-dropdown'\n            onMouseLeave={() => this.toggle()}\n          >\n            {options}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default IbcmOpcode;\n","import React from 'react';\n\nclass IbcmComments extends React.Component {\n  handleChange(event) {\n    this.props.updateComments(event.target.value);\n  }\n  render() {\n    return (\n      <div className='ibcm-comments'>\n        <input\n          type='text'\n          value={this.props.comments}\n          onChange={this.handleChange.bind(this)}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default IbcmComments;\n","import React from 'react';\n\nclass IbcmBody extends React.Component {\n  handleChange(event) {\n    this.props.updateBody(event.target.value);\n  }\n  fillin(event) {\n    this.props.updateBody(event.target.value.padStart(3, '0'));\n  }\n  render() {\n    return (\n      <div className='ibcm-body'>\n        <input\n          type='text'\n          maxLength='3'\n          value={this.props.body}\n          onChange={this.handleChange.bind(this)}\n          onBlur={this.fillin.bind(this)}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default IbcmBody;\n","import React from 'react';\n\nclass IbcmDescription extends React.Component {\n  handleChange(event) {\n    this.props.updateDescription(event.target.value);\n  }\n  render() {\n    return (\n      <div className='ibcm-description'>\n        <input\n          type='text'\n          value={this.props.description}\n          onChange={this.handleChange.bind(this)}\n          disabled={!this.props.userEdit}\n        ></input>\n        <button\n          title='Toggle Edit'\n          onClick={this.props.updateUserEdit.bind(this)}\n        >\n          {this.props.userEdit && <i className='fas fa-user-slash'></i>}\n          {!this.props.userEdit && <i className='far fa-user-edit'></i>}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default IbcmDescription;\n","import React from 'react';\nimport IbcmOpcode from './IbcmOpcode';\nimport IbcmComments from './IbcmComments';\nimport IbcmBody from './IbcmBody';\nimport IbcmDescription from './IbcmDescription';\nimport ibcmOpcodes from '../scripts/ibcmOpcodes';\n\nfunction getDescription(row) {\n  let desc = '';\n  try {\n    let body = row.body;\n    let binary = parseInt(body, 16)\n      .toString(2)\n      .padStart(12, '0');\n    switch (row.opcode) {\n      case '0':\n        desc = 'halt';\n        break;\n      case '1':\n        let io = binary.charAt(0) === '0' ? 'input' : 'output';\n        let chartype = binary.charAt(1) === '0' ? 'hex' : 'ascii';\n        desc = `${io} ${chartype}`;\n        break;\n      case '2':\n        let shift = binary.charAt(0) === '0' ? 'shift' : 'rotate';\n        let dir = binary.charAt(1) === '0' ? 'left' : 'right';\n        let count = parseInt(binary.substring(binary.length - 3), 2);\n        desc = `${shift} ${dir} by ${count}`;\n        break;\n      default:\n        let command = ibcmOpcodes[row.opcode];\n        desc = `${command} ${body}`;\n        break;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  return desc;\n}\n\nclass IbcmRow extends React.Component {\n  updateOpcode(opcode) {\n    let code = { ...this.props.ibcm };\n    code.opcode = opcode;\n    if (!code.userEdit) code.description = getDescription(code);\n    this.props.editor(this.props.addr, code);\n  }\n  updateComments(comments) {\n    let code = { ...this.props.ibcm };\n    code.comments = comments;\n    this.props.editor(this.props.addr, code);\n  }\n  updateBody(body) {\n    let code = { ...this.props.ibcm };\n    code.body = body;\n    if (!code.userEdit) code.description = getDescription(code);\n    this.props.editor(this.props.addr, code);\n  }\n  updateDescription(desc) {\n    let code = { ...this.props.ibcm };\n    if (code.userEdit) code.description = desc;\n    this.props.editor(this.props.addr, code);\n  }\n  updateUserEdit() {\n    let code = { ...this.props.ibcm };\n    code.userEdit = !code.userEdit;\n    if (!code.userEdit) code.description = getDescription(code);\n    this.props.editor(this.props.addr, code);\n  }\n  render() {\n    return (\n      <div className='ibcm-row' id={this.props.addr}>\n        <div className='ibcm-address'>\n          {this.props.addr.toString(16).padStart(3, '0')}\n        </div>\n        <div className='ibcm-value'>\n          <IbcmOpcode\n            opcode={this.props.ibcm.opcode}\n            updateOpcode={this.updateOpcode.bind(this)}\n          ></IbcmOpcode>\n          <IbcmBody\n            body={this.props.ibcm.body}\n            updateBody={this.updateBody.bind(this)}\n          />\n        </div>\n        <IbcmDescription\n          description={this.props.ibcm.description}\n          userEdit={this.props.ibcm.userEdit}\n          updateDescription={this.updateDescription.bind(this)}\n          updateUserEdit={this.updateUserEdit.bind(this)}\n        ></IbcmDescription>\n        <IbcmComments\n          comments={this.props.ibcm.comments}\n          updateComments={this.updateComments.bind(this)}\n        ></IbcmComments>\n      </div>\n    );\n  }\n}\n\nexport default IbcmRow;\n","function exportCode(ibcm) {\n  var outputStr = '';\n  for (var i = 0; i < ibcm.length; i++) {\n    var line =\n      ibcm[i].opcode +\n      ibcm[i].body +\n      '\\t' +\n      i.toString(16).padStart(3, '0') +\n      '\\t' +\n      ibcm[i].description +\n      '\\t' +\n      ibcm[i].comments;\n    outputStr += line.trimRight() + '\\n';\n  }\n\n  const element = document.createElement('a');\n  const file = new Blob([outputStr], { type: 'text/plain' });\n  element.href = URL.createObjectURL(file);\n  element.download = 'file.ibcm';\n  document.body.appendChild(element);\n  element.click();\n}\nexport default exportCode;\n","import React from 'react';\nimport Toolbar from './Toolbar';\nimport IbcmHeader from './IbcmHeader';\nimport IbcmRow from './IbcmRow';\nimport exportCode from '../scripts/exportCode';\n\n/*\n\n{\n  ibcm : \n    [\n      {\n        opcode\n        body\n        comments\n      }\n    ]\n}\n\n*/\n\nconst blankIbcm = {\n  opcode: '0',\n  body: '000',\n  comments: '',\n  description: 'halt',\n  userEdit: false\n};\n\nclass Editor extends React.Component {\n  constructor() {\n    super();\n    let initialIbcm = [];\n    for (var i = 0; i < 100; i++) {\n      initialIbcm.push(blankIbcm);\n    }\n    this.state = { ibcm: initialIbcm };\n  }\n  updateIbcm(row, code) {\n    const ibcm = [...this.state.ibcm];\n    ibcm[row] = code;\n    this.setState({ ibcm: ibcm });\n  }\n  resetIbcm() {\n    let initialIbcm = [];\n    for (var i = 0; i < 100; i++) {\n      initialIbcm.push(blankIbcm);\n    }\n    this.setState({ ibcm: initialIbcm });\n  }\n  exportIbcm() {\n    exportCode(this.state.ibcm);\n  }\n  render() {\n    const rows = this.state.ibcm.map((row, index) => (\n      <IbcmRow\n        key={index}\n        addr={index}\n        ibcm={row}\n        editor={this.updateIbcm.bind(this)}\n      ></IbcmRow>\n    ));\n    return (\n      <div id='editor'>\n        <Toolbar\n          resetter={this.resetIbcm.bind(this)}\n          exportter={this.exportIbcm.bind(this)}\n        ></Toolbar>\n        <IbcmHeader></IbcmHeader>\n        {rows}\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","import React from 'react';\nimport Editor from './Editor';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Editor></Editor>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/style.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}